apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

greendao {
    schemaVersion 10// 数据库版本号
    daoPackage 'com.ssz.baselibrary.model.local.dao' //greenDao 自动生成的代码保存的包名
    targetGenDir 'src/main/java'// 自动生成的代码存储的路径，默认是 build/generated/source/greendao.
//    generateTests false  //true的时候自动生成测试单元
//    targetGenDirTests: //测试单元的生成目录默认是 src / androidTest / java
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    // recycleview
    implementation rootProject.ext.dependencies["recycleview"]

    //dragger2
    api rootProject.ext.dependencies["dagger2"]
    api rootProject.ext.dependencies["dagger2-android"]
    api rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
    //  rxjava
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    //  retrofit
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-rx-adapter"]
    // okhttp
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["logging-interceptor"]
    //  gson
    api rootProject.ext.dependencies["gson"]
    //  greenDao
    api rootProject.ext.dependencies["greendao"]
    api rootProject.ext.dependencies["greendao-generator"]
    //  glide
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

    //@IntDef和@StringDef
    api rootProject.ext.dependencies["annotations"]

    //butterknife
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //rxlifecycle
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle-android"]
    api rootProject.ext.dependencies["rxlifecycle-components"]

    api  rootProject.ext.dependencies["timber"]

    api rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
}
