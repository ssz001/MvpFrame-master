apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

//use : import kotlinx.android.synthetic.main.<layout>.*。
apply plugin: 'kotlin-android-extensions'

// greenDao step : 2
apply plugin: 'org.greenrobot.greendao'

// 使得支持Kapt
apply plugin: 'kotlin-kapt'


android {
    // 打包
//    signingConfigs {
//        config {
//            keyAlias 'ssz001'
//            keyPassword 'ssz001'
//            storeFile file('C:/Users/14565/Desktop/ssz/studydemo.jks')
//            storePassword 'ssz001'
//        }
//    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.ssz.studydemo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
//            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }

        debug {
            zipAlignEnabled false
            //增加 BuildConfig 类参数 有问题
//            buildConfigField ("String","name","zsp")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// greenDao step 3
greendao {
    schemaVersion 6// 数据库版本号
    daoPackage 'com.ssz.studydemo.model.local.dao' //greenDao 自动生成的代码保存的包名
    targetGenDir 'src/main/java'// 自动生成的代码存储的路径，默认是 build/generated/source/greendao.
//    generateTests false  //true的时候自动生成测试单元
//    targetGenDirTests: //测试单元的生成目录默认是 src / androidTest / java
}

repositories {
    maven {
        url 'https://dl.bintray.com/qichuan/maven/'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//  已经在 kotlinexample 模块中用api导入了
//  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["recycleview"]
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    //dragger2
    implementation rootProject.ext.dependencies["dagger2"]
    implementation rootProject.ext.dependencies["dagger2-android"]
    implementation rootProject.ext.dependencies["dagger-android-support"]
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    kapt rootProject.ext.dependencies["dagger-android-processor"]
    //  rxjava
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    //  retrofit
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-rx-adapter"]
    // okhttp
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    //  gson
    implementation rootProject.ext.dependencies["gson"]
    //  greenDao
    implementation rootProject.ext.dependencies["greendao"]
    implementation rootProject.ext.dependencies["greendao-generator"]
    //  glide
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

    //@IntDef和@StringDef
    implementation rootProject.ext.dependencies["annotations"]

    // kotlin coroutines
    implementation rootProject.ext.dependencies["kotlinx-coroutines-android"]

}
